
extend type Query {
    getConsultant(id: ID!): GetResponseConsultant
}

extend type Mutation {
    createConsultant(data: ConsultantInput): DefaultResponse!
}

type Consultant @key(fields: "id") {
    id: ID!
    nameCharacter: String
    qualifications: String
    interests: String
    hospitals: String
    email: String
    website: String
    telephone: String
    specialities(status: String): [SpecialityAndServicePages]
    services(status: String): [SpecialityAndServicePages]
}

type SpecialityAndServicePages {
    id: String
    name: String
    shortDescription: String
    seoFriendlyLinkId: String
    seoFriendlyLink: String
    customLink: String
    template: String
    pageStatus: String
}

extend type Page {
    consultantInfo: Consultant
}

input ConsultantInput {
    id: ID!
    nameCharacter: String
    qualifications: String
    interests: String
    hospitals: String
    email: String
    website: String
    telephone: String
    specialities: [SpecialityAndServicePagesInput]
    services: [SpecialityAndServicePagesInput]
}


input SpecialityAndServicePagesInput {
    id: String
}

type GetResponseConsultant {
    data: Consultant
}
