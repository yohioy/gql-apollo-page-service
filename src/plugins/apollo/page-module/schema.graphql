
type Page @key(fields: "id") {
    id: ID!
    name: String!
    parentPage: String!
    createdDate: String
    modifiedDate: String
    pageStatus: String
}

extend type Query {
    getPages(filter: FilterByInput, status: String, options: OptionsByInput, orderBy: LinkOrderByInput): GetResponsePages
    getPage(id: ID!): GetResponsePage
}

extend type Mutation {
    createPage(
        name: String!,
        parentPage: String!
    ): DefaultResponse!
}

input FilterByInput {
    parentPage: String
}

input OptionsByInput {
    limit: Int
    startKey: String
}

input LinkOrderByInput {
    name: Sort
    createdDate: Sort
}

enum Sort {
    asc
    desc
}

type GetResponsePage {
    code: Int!
    data: Page
}

type GetResponsePages {
    code: Int!
    data: [Page]
}

type DefaultResponse {
    code: Int!
    message: String!
}
