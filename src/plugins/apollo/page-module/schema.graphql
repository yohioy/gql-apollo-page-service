
type Page @key(fields: "id") {
    id: ID!
    name: String!
    parentPage: String!
    strapLine:String
    shortDescription: String
    longDescription: String
    seoFriendlyLinkId: String
    seoFriendlyLink: String
    customLink: String
    metaTitle: String
    metaDescription: String
    metaKeywords: String
    featuredImage: String
    templateType: String
    menuLocation: String
    relatedPages: String
    pagePosition: String
    createdDate: String
    modifiedDate: String
    expiryDate: String
    pageStatus: String
}

extend type Query {
    getPages(filter: FilterByInput, status: String, options: OptionsByInput, orderBy: LinkOrderByInput): GetResponsePages
    getPage(id: ID!): GetResponsePage
}

extend type Mutation {
    createPage(
        name: String!,
        parentPage: String!,
        strapLine: String,
        shortDescription: String,
        longDescription: String,
        seoFriendlyLinkId: String,
        seoFriendlyLink: String,
        customLink: String,
        metaTitle: String,
        metaDescription: String,
        metaKeywords: String,
        featuredImage: String
        templateType: String,
        menuLocation: String,
        relatedPages: String,
        pagePosition: String,
        expiryDate: String
        pageStatus: String
    ): DefaultResponse!

    updatePage(
        id: String!,
        name: String,,
        parentPage: String
        pageStatus: String
    ): DefaultResponse!
}


input FilterByInput {
    parentPage: String
}

input OptionsByInput {
    limit: Int
    startKey: StartKeyInput
}

input LinkOrderByInput {
    name: Sort
    createdDate: Sort
}

input StartKeyInput {
    id: String
    createdDate: String
    name: String
}

enum Sort {
    asc
    desc
}

type GetResponsePage {
    code: Int!
    data: Page
}

type GetResponsePages {
    code: Int!
    data: [Page]
    pagination: PaginateOptions
}

type PaginateOptions {
    count: Int
    lastEvaluatedKey: LastEvaluatedKey
}

type LastEvaluatedKey {
    id: String
    createdDate: String
    name: String
}

type DefaultResponse {
    code: Int!
    message: String!
}
